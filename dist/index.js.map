{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["/**\n * @description \u679A\u4E3Eitem\n * @eg const bizEnumItem = new EnumItem(['static', 1, '\u9759\u6001'])\n *  bizEnumItem === 'static'\n *  bizEnumItem.static === 'static'\n *  bizEnumItem.val === 1\n *  bizEnumItem.desc === '\u9759\u6001'\n *  @eg2 const bizEnumItem2 = new EnumItem('static')\n *  bizEnumItem2 === 'static'\n *  bizEnumItem2.static === 'static'\n *  bizEnumItem2.val === 1\n *  bizEnumItem2.desc === '\u9759\u6001'\n *\n */\nclass EnumItem {\n  private _key: '';\n  private _val: '';\n  private _desc: '';\n  constructor(conf: EnumConfObj) {\n    if (Array.isArray(conf)) {\n      const [val, key, desc] = conf || [];\n      this.init(key, val, desc);\n    } else if (typeof conf === 'object' && conf) {\n      const { key, val, desc } = conf || {};\n      this.init(key, val, desc);\n    } else {\n      this.init(conf, conf, conf);\n    }\n  }\n\n  private init(key, val, desc) {\n    this._key = key;\n    this._val = val ?? key;\n    this._desc = desc ?? val ?? key;\n  }\n\n  public get key(): string {\n    return this._key;\n  }\n  public get val(): string {\n    return this._val;\n  }\n  public get desc() {\n    return this._desc;\n  }\n\n  [Symbol.toPrimitive]() {\n    return this._val;\n  }\n\n  valueOf() {\n    return this._val;\n  }\n}\ntype EnumConfigItem = number | string | boolean | never;\ntype EnumConfigKey = string;\ntype EnumConfObj = EnumConfigItem[];\n\ntype ForEachFn<T> = (callbackfn: (value: T, index: number) => void, thisArg?: any) => void;\ntype MapFn<T, U> = (callbackfn: (value: T, index: number) => U, thisArg?: any) => U[];\n\ntype RecordType = {\n  [k: string]: any;\n};\n\ntype OptionType = {\n  value: EnumConfigItem;\n  label: string;\n  key: string;\n};\nexport interface EnumObj extends RecordType {\n  /**\n   * \u679A\u4E3Ekey\u7684\u96C6\u5408\n   * @return [...keys]\n   */\n  keys: EnumConfigKey[];\n  /**\n   * \u904D\u5386\u679A\u4E3E \u540CArray\u7684forEach\n   * @params fn(value \u5F53\u524D\u679A\u4E3E{ key, val, desc})\n   */\n  forEach: ForEachFn<EnumItem>;\n  /**\n   * \u904D\u5386\u679A\u4E3E\u3001\u5BF9\u6BCF\u4E2A\u679A\u4E3E\u503C\u505A\u903B\u8F91\u4EA7\u751F\u7684\u7ED3\u679C\u5E76\u96C6\u5408\u8FD4\u56DE \u540CArray\u7684map\n   * @params callbackfn: (value: T, index: number) => U, thisArg?: any\n   */\n  map: MapFn<EnumItem, any>;\n  /**\n   * \u751F\u6210\u7528\u4E8Eselect\u7B49\u7EC4\u4EF6\u7684\u540E\u9009\u9879\n   * @returns [...{ label, value }]\n   */\n  options: () => OptionType[];\n}\n\nfunction inheritPrototype(subType, superType) {\n  const prototype = Object(superType.prototype);\n  prototype.constructor = subType;\n  subType.prototype = prototype;\n}\n\nfunction EnumFn(this: any) {\n  this.forEach = function (fn) {\n    this.keys?.forEach((key, index) => {\n      fn.call(this, this[key] as EnumItem, index);\n    });\n  };\n  this.map = function (fn) {\n    const _map: any[] = [];\n    this.keys?.forEach((key, index) => {\n      _map.push(fn.call(this, this[key] as EnumItem, index));\n    });\n    return _map;\n  };\n  this.options = function () {\n    const _map: OptionType[] = [];\n    this.keys?.forEach((key) => {\n      const { desc, val } = this[key];\n      _map.push({ label: desc, value: val, key });\n    });\n    return _map;\n  };\n}\n\nfunction EnumParent() {\n  // empty\n}\nEnumParent.prototype = new EnumFn();\ninheritPrototype(EnumObjCreate, EnumParent);\nfunction EnumObjCreate(this: any) {\n  EnumParent.call(this);\n  this.keys = [] as EnumConfigKey[];\n}\n\n/**\n * @description \u679A\u4E3E\u65B9\u6CD5\n * @eg const statusEnum = new enumer([\n *  [1, 'success', '\u6210\u529F']\uFF0C\n *  [2, 'failure', '\u5931\u8D25']\uFF0C\n * ])\n *  statusEnum.success === 'success'\n *  statusEnum.success.key === 'success'\n *  statusEnum.success.val === 1\n *  statusEnum.success.desc === '\u6210\u529F'\n *\n *  statusEnum.failure === 'failure'\n *  statusEnum.failure.key === 'failure'\n *  statusEnum.failure.val === 2\n *  statusEnum.failure.desc === '\u5931\u8D25'\n *\n */\nexport function enumer(conf: EnumConfObj[]): EnumObj {\n  if (!Array.isArray) {\n    console.warn('enumer \u6784\u9020\u5668\u9700\u8981\u4F20\u6570\u7EC4');\n    return {} as any;\n  }\n\n  const result: EnumObj = new EnumObjCreate();\n  conf.forEach((item) => {\n    const _enumItem = new EnumItem(item);\n\n    result[_enumItem.key] = _enumItem;\n    result[_enumItem.val] = _enumItem;\n    result.keys.push(_enumItem.key);\n  });\n  return result;\n}\n"],
  "mappings": "AAcA,IAAMA,EAAN,KAAe,CACL,KACA,KACA,MACR,YAAYC,EAAmB,CAC7B,GAAI,MAAM,QAAQA,CAAI,EAAG,CACvB,GAAM,CAACC,EAAKC,EAAKC,CAAI,EAAIH,GAAQ,CAAC,EAClC,KAAK,KAAKE,EAAKD,EAAKE,CAAI,CAC1B,SAAW,OAAOH,GAAS,UAAYA,EAAM,CAC3C,GAAM,CAAE,IAAAE,EAAK,IAAAD,EAAK,KAAAE,CAAK,EAAIH,GAAQ,CAAC,EACpC,KAAK,KAAKE,EAAKD,EAAKE,CAAI,CAC1B,MACE,KAAK,KAAKH,EAAMA,EAAMA,CAAI,CAE9B,CAEQ,KAAKE,EAAKD,EAAKE,EAAM,CAC3B,KAAK,KAAOD,EACZ,KAAK,KAAOD,GAAOC,EACnB,KAAK,MAAQC,GAAQF,GAAOC,CAC9B,CAEA,IAAW,KAAc,CACvB,OAAO,KAAK,IACd,CACA,IAAW,KAAc,CACvB,OAAO,KAAK,IACd,CACA,IAAW,MAAO,CAChB,OAAO,KAAK,KACd,CAEA,CAAC,OAAO,WAAW,GAAI,CACrB,OAAO,KAAK,IACd,CAEA,SAAU,CACR,OAAO,KAAK,IACd,CACF,EAwCA,SAASE,EAAiBC,EAASC,EAAW,CAC5C,IAAMC,EAAY,OAAOD,EAAU,SAAS,EAC5CC,EAAU,YAAcF,EACxBA,EAAQ,UAAYE,CACtB,CAEA,SAASC,GAAkB,CACzB,KAAK,QAAU,SAAUC,EAAI,CAC3B,KAAK,MAAM,QAAQ,CAACP,EAAKQ,IAAU,CACjCD,EAAG,KAAK,KAAM,KAAKP,CAAG,EAAeQ,CAAK,CAC5C,CAAC,CACH,EACA,KAAK,IAAM,SAAUD,EAAI,CACvB,IAAME,EAAc,CAAC,EACrB,YAAK,MAAM,QAAQ,CAACT,EAAKQ,IAAU,CACjCC,EAAK,KAAKF,EAAG,KAAK,KAAM,KAAKP,CAAG,EAAeQ,CAAK,CAAC,CACvD,CAAC,EACMC,CACT,EACA,KAAK,QAAU,UAAY,CACzB,IAAMA,EAAqB,CAAC,EAC5B,YAAK,MAAM,QAAST,GAAQ,CAC1B,GAAM,CAAE,KAAAC,EAAM,IAAAF,CAAI,EAAI,KAAKC,CAAG,EAC9BS,EAAK,KAAK,CAAE,MAAOR,EAAM,MAAOF,EAAK,IAAAC,CAAI,CAAC,CAC5C,CAAC,EACMS,CACT,CACF,CAEA,SAASC,GAAa,CAEtB,CACAA,EAAW,UAAY,IAAIJ,EAC3BJ,EAAiBS,EAAeD,CAAU,EAC1C,SAASC,GAAyB,CAChCD,EAAW,KAAK,IAAI,EACpB,KAAK,KAAO,CAAC,CACf,CAmBO,SAASE,EAAOd,EAA8B,CACnD,GAAI,CAAC,MAAM,QACT,eAAQ,KAAK,yDAAiB,EACvB,CAAC,EAGV,IAAMe,EAAkB,IAAIF,EAC5B,OAAAb,EAAK,QAASgB,GAAS,CACrB,IAAMC,EAAY,IAAIlB,EAASiB,CAAI,EAEnCD,EAAOE,EAAU,GAAG,EAAIA,EACxBF,EAAOE,EAAU,GAAG,EAAIA,EACxBF,EAAO,KAAK,KAAKE,EAAU,GAAG,CAChC,CAAC,EACMF,CACT",
  "names": ["EnumItem", "conf", "val", "key", "desc", "inheritPrototype", "subType", "superType", "prototype", "EnumFn", "fn", "index", "_map", "EnumParent", "EnumObjCreate", "enumer", "result", "item", "_enumItem"]
}
